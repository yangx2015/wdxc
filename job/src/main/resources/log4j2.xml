<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL -->
<Configuration status="DEBUG">
	<properties>  
        <property name="LOG_HOME">/var/log/ldz/job</property>
        <!-- 日志备份目录 -->  
        <property name="BACKUP_HOME">${LOG_HOME}/backup</property>  
        <property name="STAT_NAME">{sys:catalina.home}</property>  
        <property name="SERVER_NAME">global</property>  
    </properties>  
    <Appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 输出日志的格式 -->
            <PatternLayout  pattern="%highlight{[%d{HH:mm:ss,SSS}] %-200m [%t | %c{2}:%L]}%n%throwable"/>
            <!--<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} %l %M - %msg%xEx%n"/>-->
        </Console>
        <!-- 设置日志格式并配置日志压缩格式.immediateFlush='true'将日志结果立即写入文件中 -->
        <RollingRandomAccessFile name="debug_appender"
                                 immediateFlush="true" fileName="${LOG_HOME}/info.log"
                                 filePattern="${BACKUP_HOME}/info.log.%d{yyyy-MM-dd_HH}-%i.gz">
             <!--
                %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
                %p : 日志输出格式
                %c : logger的名称
                %m : 日志内容，即 logger.info("message")
                %n : 换行符
                %C : Java类名
                %L : 日志输出所在行数
                %M : 日志输出所在方法名
                hostName : 本地机器名
                hostAddress : 本地ip地址
             -->
            <PatternLayout>
				<TimeBasedTriggeringPolicy/>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} %l %M -- %msg%xEx%n</pattern>
            </PatternLayout>
            <Policies>
            	<SizeBasedTriggeringPolicy size="100 MB" /> 
            </Policies>
            
            <DefaultRolloverStrategy max="20"/>
        </RollingRandomAccessFile>
        <!-- 设置日志格式并配置日志压缩格式.immediateFlush='true'将日志结果立即写入文件中 -->
        <RollingRandomAccessFile name="accessInfoLog_appender"
                                 immediateFlush="true" fileName="${LOG_HOME}/access_info.log"
                                 filePattern="${BACKUP_HOME}/access_info.log.%d{yyyy-MM-dd_HH}-%i.gz">
             <!--
                %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
                %p : 日志输出格式
                %c : logger的名称
                %m : 日志内容，即 logger.info("message")
                %n : 换行符
                %C : Java类名
                %L : 日志输出所在行数
                %M : 日志输出所在方法名
                hostName : 本地机器名
                hostAddress : 本地ip地址
             -->
            <PatternLayout>
				<TimeBasedTriggeringPolicy/>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} %l %M -- %msg%xEx%n</pattern>
            </PatternLayout>
            <Policies>
            	<SizeBasedTriggeringPolicy size="100 MB" /> 
            </Policies>
            <!-- 归档文件超过30天的将被自动删除 -->
            <DefaultRolloverStrategy>
		        <Delete basePath="${baseDir}">
		          <IfFileName glob="access_info.log.*.gz" />
		          <IfLastModified age="30d" />
		        </Delete>
	      	</DefaultRolloverStrategy>
        </RollingRandomAccessFile>
        <!-- 设置日志格式并配置日志压缩格式.immediateFlush='true'将日志结果立即写入文件中 -->
        <RollingRandomAccessFile name="errorInfoLog_appender"
                                 immediateFlush="true" fileName="${LOG_HOME}/error_info.log"
                                 filePattern="${BACKUP_HOME}/error_info.log.%d{yyyy-MM-dd_HH}-%i.gz">

			<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
             <!--
                %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
                %p : 日志输出格式
                %c : logger的名称
                %m : 日志内容，即 logger.info("message")
                %n : 换行符
                %C : Java类名
                %L : 日志输出所在行数
                %M : 日志输出所在方法名
                hostName : 本地机器名
                hostAddress : 本地ip地址
             -->
            <PatternLayout>
				<TimeBasedTriggeringPolicy/>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} %l %M -- %msg%xEx%n</pattern>
            </PatternLayout>
            <Policies>
            	<SizeBasedTriggeringPolicy size="10 MB" /> 
            </Policies>
            
            <!-- 归档文件超过30天的将被自动删除 -->
            <DefaultRolloverStrategy>
		        <Delete basePath="${baseDir}">
		          <IfFileName glob="error_info.log.*.gz" />
		          <IfLastModified age="30d" />
		        </Delete>
	      	</DefaultRolloverStrategy>
        </RollingRandomAccessFile>
    </Appenders>


	<Loggers>
		<!-- 配置日志的根节点
        <root level="debug">
        	<appender-ref ref="error_appender"/>
            <appender-ref ref="Console"/>
        </root>-->
         
        <!-- 第三方日志系统 -->
        <logger name="org.springframework.web" level="info"/>
        
		<!-- 打印Mybatis SQL日志信息，仅开发测试使用 -->
		<logger name="com.ldz.job.**.mapper" level="debug" includeLocation="false" additivity="false">
            <appender-ref ref="Console"/>
        </logger>
        
        <logger name="access_info" level="debug" includeLocation="false" additivity="false">
            <appender-ref ref="debug_appender"/>
            <appender-ref ref="accessInfoLog_appender"/>
            <appender-ref ref="Console"/>
        </logger>
        <logger name="error_info" level="debug" includeLocation="false" additivity="false">
            <appender-ref ref="debug_appender"/>
            <appender-ref ref="errorInfoLog_appender"/>
            <appender-ref ref="Console"/>
        </logger>
        <!-- 日志实例(info),其中'service-log'继承root,但是root将日志输出控制台,而'service-log'将日志输出到文件,通过属性'additivity="false"'将'service-log'的
             的日志不再输出到控制台  -->
        <logger name="com.ldz.job" level="debug" includeLocation="false" additivity="false">
            <appender-ref ref="debug_appender"/>
            <appender-ref ref="Console"/>
        </logger>
	</Loggers>
</Configuration>