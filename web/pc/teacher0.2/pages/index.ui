<template>
  <ui-page  style="overflow-y: hidden;">
      
      <ui-view class="box_col" style="{{ { height: pageHeight(0)+ 'px'} }}">
            <!-- 页面内容 start-->
            <ui-view>

            </ui-view>
            <ui-view class="log_box">
                <ui-view>
                    <ui-row>
                      <ui-icon type="webicon318"></ui-icon>
                      <ui-input ui:model="{{form.starGPS.name}}" placeholder="你在哪儿" bindtap="getStarGps"></ui-input>
                    </ui-row>
                </ui-view>
                <ui-view>
                    <ui-row>
                      <ui-icon type="webicon318"></ui-icon>
                      <ui-input ui:model="{{form.endGPS.name}}" placeholder="要去哪儿" bindtap="getEndGps"></ui-input>
                    </ui-row>
                </ui-view>
                <ui-view>
                  <ui-row>
                     <ui-col sapn=2>
                        <ui-icon type="shijianshizhongdaojishi" bindtap="radioCalendaropen" ></ui-icon>
                      </ui-col >
                      <ui-col span=4 bindtap="radioCalendaropen" align="left" >
                        <ui-text>{{radioMonth}}月{{radioDay}}日{{ timeValue }}</ui-text>
                      
                     </ui-col>
                     <ui-col span=2>
                        <ui-icon type="yuan-copy-copy-copy-copy" ></ui-icon>
                      </ui-col>
                      <ui-col span=4 align="left" bindtap="getmyself()">
                        <ui-text>{{people}}</ui-text>
                     </ui-col>
                  </ui-row>
                </ui-view>

                <ui-view ui:if="{{people === '他人乘坐'}}">
                  <ui-row>
                    
                      <ui-col span=4>
                        <ui-input  ui:model="{{form.ck}}"  placeholder="姓名" maxlength="11"></ui-input>
                      
                     </ui-col>
                     
                      <ui-col span=4 >
                        <ui-input ui:model="{{newnum}}" placeholder="手机号码" ></ui-input>
                     </ui-col>
                  </ui-row>
                </ui-view>
                <ui-view>
                   <ui-row height="100">
                     <ui-col ui:for="{{carlist}}" bindtap="getcarnum(item,index)">
                       <!-- <ui-text>xiaoche </ui-text> -->
                       <ui-image src="static/img/teacher/car.jpg" mode="widthFix" width="90%" align="center"></ui-image>
                       <ui-text align="center" style="{{ {fontSize:'20px',color:item.color} }}">{{item.val}}座</ui-text>
                     </ui-col>
                   </ui-row>
                </ui-view>
               
                <ui-button class="login" bindtap="submit()">提交订单</ui-button>
                
            </ui-view>
            <!-- 页面内容 end-->
            <!-- <ui-button type="primary" bindtap="goStarPage">出发地</ui-button>
            <ui-button type="primary" bindtap="goEndPage">目的地</ui-button> -->
            <!-- 單選日期 -->
            <!-- <ui-button type="primary" full-width="false" bindtab="radioCalendar = true">主要操作</ui-button> -->
            <!-- <ui-mask ui:model="true">
                <ui-view class="content">sdfs
                </ui-view>
            </ui-mask> -->
            <ui-popup ui:model="{{ show  }}">
              <ui-view class="popup1">
                <ui-row height="{{headerHeight}}">
                  <ui-col align="left" vertical-align="middle" width="70" space-left="10" bindtap="handleSelect('radioCalendar')">
                      <ui-icon type="close" color="#e60012"></ui-icon>
                  </ui-col>
                  <ui-col align="center" vertical-align="middle">
                    <ui-text>选择日期</ui-text>
                  </ui-col>
                  <ui-col align="center" vertical-align="middle" width="70">
                  </ui-col>

                </ui-row>
                <ui-v-calendar
                ui:if="{{ show }}"
                disable-past-days
                select-range-mode="{{false}}"
                header-height="30"
                height="319"
                show-today
                bindchange="selectedChange"
                value="{{radioDate}}"
              ></ui-v-calendar>
              <ui-picker-view mode="time" value="{{ timeValue }}" bindchange="handleChange4"></ui-picker-view>
              <ui-button  bindtap="resetPicker2">确定</ui-button>
              </ui-view>
            </ui-popup>
            <!-- 单选结束 -->
            <!-- <ui-view class="win">
              <ui-row space-top="15">
                <ui-button class="btnyd">立即预订</ui-button>
              </ui-row>
          </ui-view> -->
          
          

      </ui-view>
      
  </ui-page>
</template>

<script>
import util from "static/utils/util";
var formatLocation = util.formatLocation
export default {
    // navigationStyle: 'custom',
  config: {
    navigationBarBackgroundColor:"#FF7F50",
    navigationBarTextStyle:"white",
    navigationBarTitleText:"首页约车",
    title:'首页约车',
    backgroundColor:'#fff',
    delay:false,//延迟加载
    "touchSlideMenu": true
  },
  data () {
    return {
      newnum:'',
      timeValue: '',
      show:false,
      time:'',
      radioCalendar:false,
      form:{
        ck:'',
        phone:'',
        time:'',
        num:'',
        starGPS:{
          name:''
        },
        endGPS:{
          name:''
        }
      },
      choosedCar:'',
      carlist:[
        {
          val:5,
          color:"#000"
        },
        {
          val:7,
          color:"#000"
        },
        {
          val:11,
          color:"#000"
        }
      ],
      people:'本人乘坐',
      statusBarHeight: ui.STATUS_BAR_HEIGHT,
        headerHeight: ui.DEFAULT_HEADER_HEIGHT,
        // 单选日历，popup显隐控制
        radioCalendar: false,
        // 单选日历value
        radioDate: '',
        // 单选月
        radioMonth: '',
        // 单选天
        radioDay: '',
        // 存储临时变化的时间
        dateobj: {},
        // 双选，默认选中的时间
        defaultMonthrange: [],
        // 双选默认不选中日历，popup显隐控制
        rangeCalendar: false,
        // 双选默认选中日历，popup显隐控制
        rangeCalendarDefault: false,
        // 双选默认不选中 时间差
        differ: '',
        // 时间差显隐控制
        differShow: false,
        // 双选默认选中 时间差
        differ2: '2',
        // 双选默认不选中日历 value
        rangeDate: '',
        // 双选默认选中日历 value
        rangeDate2: '',
        // 双选默认不选中日历 开始日期
        rangestart: '',
        // 双选默认不选中日历 结束日期
        rangeend: '',
        // 双选默认选中日历 开始日期
        rangestart2: '',
        // 双选默认选中日历 结束日期
        rangeend2: '',
        height: ui.WIN_HEIGHT
    
    }
  },
  methods: {
    indexYZ(){
      var v = this
      console.log(v.form)
      if(v.form.starGPS.name==''){
         ui.showToast({ title: '请选择您的位置!'})
          return false
      }
      if(v.form.endGPS.name==''){
        ui.showToast({ title: '请选择目的地!'})
          return false
      }
      if(v.choosedCar==''){
        ui.showToast({ title: '请选择车型!'})
          return false
      }
      console.log('timeValue',v.timeValue)
      if(v.timeValue==''){
        ui.showToast({ title: '请选择上车时间!'})
          return false
      }
      console.log(v.people)
      console.log(v.newnum)
      if(v.people==='他人乘车'&& v.newnum =='' && v.form.name=='' ){
         ui.showToast({ title: '请输入乘车人信息!'})
          return false
      }
      return true


    },
    submit(){
      if(!this.indexYZ()) return
      console.log("valid success,post");
      this.$http("POST",ui.getApp().apis.DDSAVE.SAVE,this.form,(res)=>{
         console.log('==========================',res)
      })
    },
    handleNavIconTap () {
      ui.getApp().showSlideMenu = !ui.getApp().showSlideMenu
    },
    getmyself(){
      var v = this
      const itemLists = [
          '本人乘坐',
          '他人乘坐'
        ]
      ui.showActionSheet({
        itemList:itemLists ,
        success: (index) => {
          console.log(index)
          v.people = itemLists[index]
          // ui.showToast({
          //   title: itemLists[index]
          // })
        }
      })
    },
    getcarnum(val,num){
      console.log(val)
       var v = this
       this.choosedCar = val;
       v.carlist.forEach((item,index) => {
         if(index==num){
           item.color="#f00"
         }else{
           item.color="#000"
         }
       });
    },
    getInput(){
       var v =  this
      ui.showPrompt({
        
        title: '新的乘车人号码',
        placeholder: '电话号码',
        value:'',
        success: (result) => {
         console.log(result)
         v.newnum = result.value
        },
      })
    },
    handleChange4 (val) {
      this.timeValue = val
    },
    resetPicker2 () {
     
      this.show=false

    },
    selectedChange(val){
        console.log('s事件++++++++++++++',val)
    },
    getStarGps(){
      var that = this
      ui.chooseLocation({
        backgroundColor:'#000',
        success: function (res) {
          console.log('success:', res)
          that.form.starGPS = res
        },
        fail: function (res) {
          console.log('fail:', res)
        }
      })
    },
    getEndGps(){
      var that = this
      ui.chooseLocation({
        backgroundColor:'#000',
        success: function (res) {
          console.log('success:', res)
          that.form.endGPS = res
        },
        fail: function (res) {
          console.log('fail:', res)
        }
      })
    },
    goProp(){
      ui.navigateTo({
        url: '/pages/prop/add'
      })
    },
    goStarPage(){
      ui.navigateTo({
        url: '/pages/xlmap'
      })
    },
    goEndPage(){
      ui.navigateTo({
        url: '/pages/xlMess'
      })
    },
    // 单选日历。获取月和天
      radioinit (thisdate) {
        this.dateobj.radioDate = thisdate
        this.dateobj.radioDate = thisdate.split('/')
        this.radioMonth = this.dateobj.radioDate[1]
        this.radioDay = this.dateobj.radioDate[2]
      },
       rangeinit (thisdate) {
        let start, end
        this.dateobj.rangestart = thisdate.rangedate[0]
        this.dateobj.rangeend = thisdate.rangedate[1]
        start = this.dateobj.rangestart.split('/')
        end = this.dateobj.rangeend.split('/')
        this.rangestart = `${start[1]}月${start[2]}日`
        this.rangeend = `${end[1]}月${end[2]}日`
      },
      // 双选默认选中日历。格式化日期格式，将开始和结束的日期格式化为‘年-月’
      rangeinit2 (thisdate) {
        let start, end
        this.dateobj.rangestart2 = thisdate.rangedate2[0]
        this.dateobj.rangeend2 = thisdate.rangedate2[1]
        start = this.dateobj.rangestart2.split('/')
        end = this.dateobj.rangeend2.split('/')
        this.rangestart2 = `${start[1]}-${start[2]}`
        this.rangeend2 = `${end[1]}-${end[2]}`
      },
      // 单选change事件，选择日期后触发。改变绑定的val值，关闭相应popup
      selectedChange (e) {
        this.radioDate = e
        this.radioinit(e)
        setTimeout(() => {
          this.radioCalendar = false
        }, 100)
      },
      // 双选默认不选日历。结束事件。改变绑定的val值，关闭相应popup
      selectedEndHandler (e) {
        this.rangeDate = e
        this.dateobj.rangedate = e
        setTimeout(() => {
          this.rangeCalendar = false
        }, 200)
        this.calculationDays()
        this.rangeinit(this.dateobj)
      },
    // 双选默认不选。选择范围错误
      failedHandler (err) {
        if (err === 1) {
          ui.showToast({ title: '您选择的时间超过30天,请重新选择' })
        }
      },
      // 双选默认选中日历。结束事件。改变绑定的val值，关闭相应popup
      selectedEndHandler2 (e) {
        this.rangeDate2 = e
        this.defaultMonthrange = e
        this.dateobj.rangedate2 = e
        setTimeout(() => {
          this.rangeCalendarDefault = false
        }, 200)
        this.calculationDays2()
        this.rangeinit2(this.dateobj)
      },
      // 双选默认选中。选择范围错误
      failedHandler2 (err) {
        if (err === 1) {
          ui.showToast({ title: '您选择的时间超过30天,请重新选择' })
        }
      },
      // 将日期格式化成 "年/月/日" 格式
      format (obj) {
        var date = new Date(obj)
        var y = 1900 + date.getYear()
        var m = '0' + (date.getMonth() + 1)
        var d = '0' + date.getDate()
        return y + '/' + m.substring(m.length - 2, m.length) + '/' + d.substring(d.length - 2, d.length)
      },
      // 单选日历 打开事件
      radioCalendaropen () {
        this.show = true
      },
      // 双选默认不选中 日历打开事件
      rangeCalendaropen (state) {
        this.rangeCalendar = true
      },

      //双选默认选中 日历打开事件
      rangeCalendarDefaultOpen () {
        this.rangeCalendarDefault = true
      },
      // 关闭popup
      handleSelect (key) {
        this[key] = false
      },
      // 双选默认不选中，根据选择日期，计算几晚
      calculationDays () {
        let start, end
        start = Date.parse(this.dateobj.rangedate[0])
        end = Date.parse(this.dateobj.rangedate[1])
        this.differ = Math.floor((end - start) / (24 * 3600 * 1000))
        this.differShow = true
      },
      //双选默认选中。根据选择日期，计算几晚
      calculationDays2 () {
        let start, end
        start = Date.parse(this.dateobj.rangedate2[0])
        end = Date.parse(this.dateobj.rangedate2[1])
        this.differ2 = Math.floor((end - start) / (24 * 3600 * 1000))
      }
   
  
    
  },
  created () {
  },
  mounted() {
    
    //单选日期 获取当前日期，并格式化赋值给日历
      let radiodate = new Date()
      this.radioDate = this.format(Date.parse(radiodate))

      //获取单选日历 获取月和天。
      let date = new Date()
      this.radioinit(this.format(date))

      // 双选默认选中日历，获取默认选中时间范围【开始：当前日期。结束：当前日期推后2天】
     


    //首屏页面需要在mounted中延时才能调用框架api，其他页面不需要延时
    setTimeout(() => {
      //关闭app启动图
      ui.closeSplashscreen()
    }, 1000);
  }
}

</script>

<style lang="less">
.demo{
  height: 300rpx;
}
.tabsSty{
  border-top:#f2f2f2 4rpx solid;
  border-bottom:#f2f2f2 4rpx solid;
}

.ListItemSty{
  padding: 15rpx 20rpx;
  .stationName{
    font-size: 32rpx;
    font-weight: 700;
    border-bottom:#f2f2f2 3rpx solid;
    .distanceSty{
      font-size: 26rpx;
      color:#8a8a8a;
    }
  }
  .stationRouterBox{
    .stationRouterItem{
      border-bottom:#f2f2f2 3rpx solid;
      padding: 10rpx 0;
      .xlName{
        font-size: 28rpx;
      }
      .toCode{
        color:#8a8a8a;
        font-size: 24rpx;
        padding-top: 15rpx;
      }
    }
  }
  // --------

}
.ui-row {
  height: 50px;
  line-height: 50px;
  // background-color: #fff;
  font-size: 14px;
}

.ui-sms-input {
  .ui-button {
    width: 110px;
  }
}

.log_box{
  padding: 20px 50px;
  .ui-view{
    padding: 10px 0 5px 0;
    .mix-1px(0, 0, 1, 0, #ccc);
    .ui-input{
      border: 0;
    }
    .ui-input-inner{
      height: 30px;
    }
    .ui-button {
      background-color: #F64E16;
      border-color: #F64E16;
      border-radius: 25px;
    }
  }
  .login{
    background-color: #F64E16;
    border: 0;
    border-radius: 25px;
    font-size: 14px;
    color: #fff;
    margin-top: 30px;
  }
  .swiper-slide {
    .ui-image {
        width: 100%;
    }
    }
 
  .smalltitle{
        font-size:12px;
        color:#666
    }
  .smalltitle2{
        background-color:#ebc7c8;
        color: #C01920;
        padding:0px 3px;
        border-radius: 5px;
        font-size:12px;
    }

  .btnyd {
        background-color: #C01920;
        border-radius: 20px;
        border-color: #C01920;
        box-shadow: 3px 3px 8px #E57A7E;
        color: #fff;
    }
    }
</style>
