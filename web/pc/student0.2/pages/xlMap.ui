<!---->
<template>
  <ui-page  style="overflow-y: hidden;">
    <ui-nav-bar slot="nav-bar" custom-style="{{ {'color':'#fff','background-color':'#FC8609'} }}">
        <ui-row height="46">
          <ui-col vertical-align="middle" align="center" width="60" bindtap="Goback">
            <ui-icon type="left" size="16" color="#fff"></ui-icon>
          </ui-col>
          <ui-col vertical-align="middle" align="center">
            <ui-view class="nav_title">地图查看</ui-view>
          </ui-col>
          <ui-col vertical-align="middle" align="center" width="60">
          </ui-col>
        </ui-row>
      </ui-nav-bar>
      <ui-view class="box_col" style="{{ { height: pageHeight(0)+ 'px'} }}">
<!-- 页面内容 start-->
                <ui-view id="allmap" style="{{{height:height+'px'}}}"></ui-view>
<!-- 页面内容 end-->
          </ui-view>
  </ui-page>
</template>


<script>
import $ from 'jquery';

export default {
  config: {
    navigationStyle: 'custom',
    navigationBarBackgroundColor:"#26a2ff",
    navigationBarTextStyle:"white",
    navigationBarTitleText:"地图查看",
    title:'地图查看',
    backgroundColor:'#f2f2f2',
    delay:false,//延迟加载
  },
  data() {
    return {
      thisIndex:5,
      height:ui.WIN_HEIGHT,
      map:'',
      item:[
        {Icon:"../static/img/Bus.png",}
      ],
      carList:[
      ],
      xlID:'',
    }
  },
  created(){
    this.xlID= ui.getApp().station.xlID
    if(!this.xlID){
        this.Goback()
    }
  },
  methods: {
    showRoute(line) {
                // 显示线路
                this.showLine(line);
                // 显示站点
                this.showStations(line);
                // 显示车辆
                this.showCars(line);
    },
    getBusCode(callback){
      var v = this
      this.$http('POST',ui.getApp().apis.XLMAP,{xlId:this.xlID},(res)=>{
          if(res.code==200&&res.result){
            v.carList = v.carList.concat(res.result)
            
          }
                callback && callback(v.carList)
      })
    },
    getxlmess(callback,callback2){
      var v = this
      this.$http('POST',ui.getApp().apis.ZDMESS,{xlid:this.xlID},(res)=>{
         if(res.code==200&&res.result){
            v.carList =  res.result.list

            v.getBusCode((lis)=>{
              callback && callback(lis)
            })
            callback2 && callback2(res.result.list)
          }
      })
    },
    goXlMess () {
      ui.navigateTo({
        url: '/pages/xlMess'
      })
    },
    Goback(){
      ui.navigateBack()
    },
     getIcon(car) {
                switch (car.zxzt) {
                    case 20:
                        return 'http://47.98.39.45:9092/icon/running.png';
                    case 10:
                        return 'http://47.98.39.45:9092/icon/ic_car.png';
                    default:
                        return 'http://47.98.39.45:9092/icon/ic_car_offline.png'
                }
    },
    addMarker(item, point,i) {
      var myIcon = ''
      var mess = ""
      if(item.cphm){
         myIcon =  new BMap.Icon(this.getIcon(item), new BMap.Size(32, 32), {anchor: new BMap.Size(16, 32)});
         var marker = new BMap.Marker(point,{icon:myIcon});
         mess = item.cphm
         this.map.addOverlay(marker);
      }else{
        var marker = new BMap.Marker(point);
        marker.setLabel(this.getNumberLabel(i));
        mess = item.zdName
        this.map.addOverlay(marker);
      }
      this.map.addOverlay(marker);
      let html = '<div style=" width: 120px;height: 28px;padding:4px;text-align: center">' +
                      '<span>' + mess +'</span> ' +
                      '</div>';

        var myLabel = new BMap.Label(html,     //为lable填写内容
            {
                offset: new BMap.Size(-80, -70),                  //label的偏移量，为了让label的中心显示在点上
                position: point
            });                                //label的位置
        myLabel.setStyle({                                   //给label设置样式，任意的CSS都是可以的
            fontSize: "16px",               //字号
            'background-color': 'rgba(255,255,255,0.6)',
            'border-radius': '4px',
        });
        myLabel.setTitle("我是文本标注label");               //为label添加鼠标提示
        this.map.addOverlay(myLabel);
      // this.addClickHandler(item, marker);
    },
    // 获取一条线路的途径点
   
showLine(points){
    let ps = [];
    for (let r of points){
        ps.push(new BMap.Point(r.lng, r.lat));
    }
    var polyline = new BMap.Polyline(ps,
        {strokeColor:"blue", strokeWeight:6, strokeOpacity:0.5}
    );
    this.map.addOverlay(polyline);

},
// 获取一条线路的途径点
getLinePoints(stationList){
    let startPoint = new BMap.Point(stationList[0].wd,stationList[0].jd);
    let endPoint = new BMap.Point(stationList[stationList.length -1].wd,stationList[stationList.length -1].jd);
    let waypoints = '';
    for (let i = 1;i<=stationList.length - 2;i++){
        let station = stationList[i];
              waypoints += station.wd+','+station.jd;
              if (i < stationList.length - 2){
                  waypoints += '|';
              }
          }
    let url = 'http://api.map.baidu.com/direction/v2/driving?origin='+stationList[0].wd+','+stationList[0].jd+'&destination='+stationList[stationList.length -1].wd+','+stationList[stationList.length -1].jd+'&ak=evDHwrRoILvlkrvaZEFiGp30';
    url += '&waypoints='+waypoints;
    let points = [];
    let v = this;
    $.ajax({
              url:url,
              type:"get",
              dataType:'JSONP',
              success:function(res){
                  if (res.status == 0){
                      let route = res.result.routes[0];
                      points.push({lat:route.origin.lat,lng:route.origin.lng});
                      for (let r of route.steps){
                          points.push({lng:r.end_location.lng,lat:r.end_location.lat});
                      }

                      v.showLine(points);
                  }
              }
          })
      },
        getNumberLabel(number) {
                var offsetSize = new BMap.Size(0, 0);
                var labelStyle = {
                    color: "#fff",
                    backgroundColor: "0.05",
                    border: "0"
                };

                //不同数字长度需要设置不同的样式。
                switch ((number + '').length) {
                    case 1:
                        labelStyle.fontSize = "14px";
                        offsetSize = new BMap.Size(4, 2);
                        break;
                    case 2:
                        labelStyle.fontSize = "12px";
                        offsetSize = new BMap.Size(2, 4);
                        break;
                    case 3:
                        labelStyle.fontSize = "10px";
                        offsetSize = new BMap.Size(-2, 4);
                        break;
                    default:
                        break;
                }

                var label = new BMap.Label(number, {
                    offset: offsetSize
                });
                label.setStyle(labelStyle);
                return label;
            },
  },
  mounted() {
    var script = document.createElement("script")
    script.type = "text/javascript"
    var callbackName = '_callback'+Date.now()
    let v = this;
    window[callbackName]= function(){
      v.map = new BMap.Map("allmap");    // 创建Map实例
      v.map.centerAndZoom(new BMap.Point(114.368107 , 30.543083), 11);  // 初始化地图,设置中心点坐标和地图级别
      var point = new BMap.Point(114.368107, 30.543083);
      v.map.centerAndZoom(point, 16); 

      v.getxlmess((res)=>{
        let c = 0;
        for (let r of res) {
          var point = new BMap.Point(r.jd, r.wd);
          v.addMarker(r, point,++c);
        };  
      },(reslist)=>{
        v.getLinePoints(reslist)
      })      
      
      // 自定义icon,创建标注
        
// 创建标注
        // v.map.addOverlay(marker2); 
      
      
      //添加地图类型控件
      v.map.addControl(new BMap.MapTypeControl({
        mapTypes:[
                BMAP_NORMAL_MAP
            ]}));   
      v.map.setCurrentCity("武汉");          // 设置地图显示的城市 此项是必须设置的
      v.map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放
      delete window[callbackName];
    }
    script.src="https://api.map.baidu.com/api?v=2.0&ak=mSjqt13IyQy0GOlkAEGBO5FA2aiIT4q7&callback="+callbackName
    document.body.appendChild(script)

  }
  
}
</script>

<style lang="less">
.lineMess{
  .ui-timeline-wrapper{
    .ui-timeline-row{
      overflow: auto;
      ul{
        display: flex;
        flex-direction: row ;
        flex-wrap:nowrap ;
        height: 100%;
      }
    }
  }
}
</style>
