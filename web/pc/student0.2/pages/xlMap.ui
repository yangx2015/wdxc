<!---->
<template>
  <ui-page  style="overflow-y: hidden;">
    <ui-nav-bar slot="nav-bar" custom-style="{{ {'color':'#fff','background-color':'#3399FF'} }}">
        <ui-row height="46">
          <ui-col vertical-align="middle" align="center" width="60">
          </ui-col>
          <ui-col vertical-align="middle" align="center">
            <ui-view class="nav_title">地图查看</ui-view>
          </ui-col>
          <ui-col vertical-align="middle" align="center" width="60">
          </ui-col>
        </ui-row>
      </ui-nav-bar>
      <ui-view class="box_col" style="{{ { height: pageHeight(0)+ 'px'} }}">
         
         <!-- <ui-view style="height:200px;overflow: auto;">
              <ui-view class="box_row_z">
                  <ui-view style="padding:0 50px" ui:for="{{100}}">
                    123
                  </ui-view>
              </ui-view>
          </ui-view>
          <ui-view class="box_col_auto"> -->
<!-- 页面内容 start-->

                <ui-view id="allmap" style="{{{height:height+'px'}}}"></ui-view>

            <ui-button type="primary" bindtap="goXlMess">线路详情</ui-button>
<!-- 页面内容 end-->

          </ui-view>

  </ui-page>
</template>

<script>
export default {
  config: {
    navigationStyle: 'custom',
    navigationBarBackgroundColor:"#26a2ff",
    navigationBarTextStyle:"white",
    navigationBarTitleText:"地图查看",
    title:'地图查看',
    backgroundColor:'#f2f2f2',
    delay:false,//延迟加载
  },
  data() {
    return {
      thisIndex:5,
      height:ui.WIN_HEIGHT,
      map:'',
      item:[
        {Icon:"../static/img/Bus.png",}
      ],
      carList:[
          {
            lng :"114.37267",
            lat : "30.544949",
          },
          {
            lng :"114.375509",
            lat : "30.545229",
          }
      ]
    }
  },
  methods: {
    goXlMess () {
      ui.navigateTo({
        url: '/pages/xlMess'
      })
    },
    addMarker(item, point) {
      // var myIcon = new BMap.Icon(v.getIcon(item), new BMap.Size(32, 32), {anchor: new BMap.Size(16, 32)});
      var marker = new BMap.Marker(point);
      this.map.addOverlay(marker);
      // this.addClickHandler(item, marker);
    },
    showCarPosition() {
      var v = this
      for (let r of this.carList) {
          var point = new BMap.Point(r.lng, r.lat);
          this.addMarker(r, point);
        }
    },
  },
  mounted() {
    var script = document.createElement("script")
    script.type = "text/javascript"
    var callbackName = '_callback'+Date.now()
    let v = this;
    window[callbackName]= function(){
     console.log(BMap)
      v.map = new BMap.Map("allmap");    // 创建Map实例
      v.map.centerAndZoom(new BMap.Point(114.368107 , 30.543083), 11);  // 初始化地图,设置中心点坐标和地图级别
      var point = new BMap.Point(114.368107, 30.543083);
      v.map.centerAndZoom(point, 15);    
      // var marker = new BMap.Marker(point);
      // v.map.addOverlay(marker);     
      v.showCarPosition();  

      // 自定义icon,创建标注
        var pt = new BMap.Point(114.368107 , 30.543083);
        var myIcon = new BMap.Icon("/static/img/gjzp.png", new BMap.Size(50,50),{imageSize: new BMap.Size(50,50),anchor: new BMap.Size(25, 25)} );
        var marker2 = new BMap.Marker(pt,{icon:myIcon});  // 创建标注
        v.map.addOverlay(marker2); 
      
      
      //添加地图类型控件
      v.map.addControl(new BMap.MapTypeControl({
        mapTypes:[
                BMAP_NORMAL_MAP,
                BMAP_HYBRID_MAP
            ]}));   
      v.map.setCurrentCity("武汉");          // 设置地图显示的城市 此项是必须设置的
      v.map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放
      delete window[callbackName];
    }
    script.src="https://api.map.baidu.com/api?v=2.0&ak=mSjqt13IyQy0GOlkAEGBO5FA2aiIT4q7&callback="+callbackName
    document.body.appendChild(script)

  }
  
}
</script>

<style lang="less">
.lineMess{
  .ui-timeline-wrapper{
    .ui-timeline-row{
      overflow: auto;
      ul{
        display: flex;
        flex-direction: row ;
        flex-wrap:nowrap ;
        height: 100%;
      }
    }
  }
}
</style>
